#!/bin/sh

asdf_upgrade() {
  version="$(asdf list-all "$1" | grep -o "^v\?[0-9.]\+$" | sort -V | tail -1)"
  if test "$1" == "julia"; then
    echo "n" | asdf install "$1" "$version"
  else
    asdf install "$1" "$version"
  fi

  if test "$1" == "poetry"; then
    remove_poetry_asdf_path_modifications
  fi
  asdf global "$1" "$version"
}

asdf_install_latest() {
  for lang in "$@"; do
    asdf plugin-add "$lang"
    asdf_upgrade "$lang"
  done
}

asdf_upgrade_all() {
  asdf plugin-update --all
  all_installed_plugins=("$(asdf plugin-list | grep -v groovy)")
  for lang in "${all_installed_plugins[@]}"; do
    asdf_upgrade "$lang"
  done
}

remove_poetry_asdf_path_modifications() {
  if test "${kernel}" == "Darwin" ; then
    sed -i '' "s/^\s*export PATH=.*asdf[^:]*poetry.*$//g" .profile .bash_profile
  elif test "${kernel}" == "Linux" ; then
    sed -i "s/^\s*export PATH=.*asdf[^:]*poetry.*$//g" .profile .bash_profile
  fi
}

launch_browser() {
  # Launch Browser
  kernel=$(uname)
  if command -v explorer.exe > /dev/null; then
    explorer.exe "$1"
  elif test "$kernel" == "Linux" -a -n "$DISPLAY"; then
    xdg-open "$1"
  elif test "$kernel" == "Darwin"; then
    open "$1"
  else
    echo "Please visit '$1'"
  fi
  echo "Press Enter to continue"
  read
}

venv() {
  if test -z "$VIRTUAL_ENV"; then
    if test -f "venv/bin/activate"; then
      . "venv/bin/activate"
      echo "Virtualenv activated!"
    elif test -f "ENV/bin/activate"; then
      . "ENV/bin/activate"
      echo "Virtualenv activated!"
    else
      echo "Virtualenv not found"
    fi
  else
    deactivate
    echo "Virtualenv deactivated!"
  fi
}

venv_init() {
  if test -z "$VIRTUAL_ENV"; then
    if test ! -d "venv" -a ! -d "ENV"; then
      python -m venv venv
    fi
  fi
}
